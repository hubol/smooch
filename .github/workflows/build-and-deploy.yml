name: Run tests on push
on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - run: npm ci

      - run: npm run build

      - uses: actions/upload-artifact@v3
        with:
          name: smooch.tgz
          path: smooch.tgz
  
  test-win:
    runs-on: windows-2019
    needs: build
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test-smooch-package

  test-linux:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test-smooch-package

  all-tested:
    needs: [test-win, test-linux]
    runs-on: ubuntu-latest
    steps:
      - run: echo "🍆"

  maybe-publish:
    needs: all-tested
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
    steps:
      # - uses: actions/checkout@v4
      #   with:
      #     sparse-checkout: |
      #       package.json
      #       package-lock.json
      #     sparse-checkout-cone-mode: false

      # - run: >
      #     echo "const versionExists = require('version-exists');
      #     const packageJson = require('./package.json');
      #     const packageLockJson = require('./package-lock.json');
          
      #     async function main() {
      #       console.log('Got package.json version=' + packageJson.version + ' and package-lock.json version=' + packageLockJson.version);
      #       if (packageJson.version !== packageLockJson.version) {
      #         throw new Error('package.json version and package-lock.json version do not match!');
      #       }
        
      #       const { version } = packageJson;
        
      #       const isThisVersionPublished = await versionExists('@hubol/smooch', version);
        
      #       if (isThisVersionPublished) {
      #         throw new Error('Version ' + version + ' is already published!');
      #       }
      #     }
          
      #     main();" > check-needs-published.js

      # - run: cat check-needs-published.js
      
      - uses: actions/download-artifact@v3
        with:
          name: smooch.tgz
          path: ./

      - run: if npm publish smooch.tgz; then echo "Published!"; else echo "Not publishing package"; fi
      
      # export NODE_PATH
      # Use global modules from NodeJS app
      # https://stackoverflow.com/a/15646750
      # - run: >
      #     npm install -g version-exists &&
      #     export NODE_PATH=$(npm root -g) &&
      #     echo "--------" &&
      #     echo "--------" &&
      #     echo "--------" &&
      #     echo "--------" &&
      #     if node ./check-needs-published.js; then npm publish smooch.tgz; else echo "Not publishing package"; fi
  
  cleanup:
    needs: maybe-publish
    runs-on: ubuntu-latest
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            smooch.tgz
